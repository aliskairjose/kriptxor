{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-4927a4c1.js","./node_modules/@ionic/core/dist/esm/framework-delegate-4392cd63.js","./node_modules/@ionic/core/dist/esm/haptic-27b3f981.js","./node_modules/@ionic/core/dist/esm/spinner-configs-cd7845af.js","./node_modules/@ionic/core/dist/esm/theme-ff3fc52f.js","./src/app/shared/services/campaign.service.ts","./src/app/shared/services/http.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAqD;AACkE;AACnE;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,qDAAS;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iEAAa;AACtB;AACA;AACA;AACA,mEAAmE,kDAAoB;AACvF,kEAAkE,kDAAsB;AACxF;AACA;AACA,MAAM,sDAAkB;AACxB;AACA;AACA,GAAG;AACH;;AAE0C;;;;;;;;;;;;;;;;;;AC/DoB;;AAE9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,uDAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;;;;;;;;ACjCtD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC,GAAG;AACH;AACA,iBAAiB,iBAAiB;AAClC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;;;;ACzGpI;AACA;AACA;AACA;AACA;AACA,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,mBAAmB;AACnD;AACA;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kCAAkC,sCAAsC;AACxE,gCAAgC,4BAA4B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;;;;AC7GzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E,kCAAkC,MAAM,UAAU;AAC5H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;;;ACtC1C;AACE;IAUhC,eAAe,SAAf,eAAe;IAE1B,YACU,IAAiB;QAAjB,SAAI,GAAJ,IAAI,CAAa;IACvB,CAAC;IAEL;;;OAGG;IACH,IAAI,CAAE,QAAgB,EAA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","file":"common.js","sourcesContent":["import { c as writeTask } from './index-7a8b7a1c.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-27b3f981.js';\nimport { createGesture } from './index-f49d994d.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n  let currentTouchedButton;\n  let initialTouchedButton;\n  const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n    if (typeof document === 'undefined') {\n      return;\n    }\n    const target = document.elementFromPoint(x, y);\n    if (!target || !isButton(target)) {\n      clearActiveButton();\n      return;\n    }\n    if (target !== currentTouchedButton) {\n      clearActiveButton();\n      setActiveButton(target, hapticFeedbackFn);\n    }\n  };\n  const setActiveButton = (button, hapticFeedbackFn) => {\n    currentTouchedButton = button;\n    if (!initialTouchedButton) {\n      initialTouchedButton = currentTouchedButton;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.add('ion-activated'));\n    hapticFeedbackFn();\n  };\n  const clearActiveButton = (dispatchClick = false) => {\n    if (!currentTouchedButton) {\n      return;\n    }\n    const buttonToModify = currentTouchedButton;\n    writeTask(() => buttonToModify.classList.remove('ion-activated'));\n    /**\n     * Clicking on one button, but releasing on another button\n     * does not dispatch a click event in browsers, so we\n     * need to do it manually here. Some browsers will\n     * dispatch a click if clicking on one button, dragging over\n     * another button, and releasing on the original button. In that\n     * case, we need to make sure we do not cause a double click there.\n     */\n    if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n      currentTouchedButton.click();\n    }\n    currentTouchedButton = undefined;\n  };\n  return createGesture({\n    el,\n    gestureName: 'buttonActiveDrag',\n    threshold: 0,\n    onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n    onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n    onEnd: () => {\n      clearActiveButton(true);\n      hapticSelectionEnd();\n      initialTouchedButton = undefined;\n    }\n  });\n};\n\nexport { createButtonActiveGesture as c };\n","import { c as componentOnReady } from './helpers-dd7e4b7b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n  getEngine() {\n    const win = window;\n    return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n  },\n  available() {\n    return !!this.getEngine();\n  },\n  isCordova() {\n    return !!window.TapticEngine;\n  },\n  isCapacitor() {\n    const win = window;\n    return !!win.Capacitor;\n  },\n  impact(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.impact({ style });\n  },\n  notification(options) {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n    engine.notification({ style });\n  },\n  selection() {\n    this.impact({ style: 'light' });\n  },\n  selectionStart() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionStart();\n    }\n    else {\n      engine.gestureSelectionStart();\n    }\n  },\n  selectionChanged() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionChanged();\n    }\n    else {\n      engine.gestureSelectionChanged();\n    }\n  },\n  selectionEnd() {\n    const engine = this.getEngine();\n    if (!engine) {\n      return;\n    }\n    if (this.isCapacitor()) {\n      engine.selectionEnd();\n    }\n    else {\n      engine.gestureSelectionEnd();\n    }\n  }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n  HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n  HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n  HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n  HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n  HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n  'bubbles': {\n    dur: 1000,\n    circles: 9,\n    fn: (dur, index, total) => {\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      const angle = 2 * Math.PI * index / total;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circles': {\n    dur: 1000,\n    circles: 8,\n    fn: (dur, index, total) => {\n      const step = index / total;\n      const animationDelay = `${(dur * step) - dur}ms`;\n      const angle = 2 * Math.PI * step;\n      return {\n        r: 5,\n        style: {\n          'top': `${9 * Math.sin(angle)}px`,\n          'left': `${9 * Math.cos(angle)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'circular': {\n    dur: 1400,\n    elmDuration: true,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 20,\n        cx: 48,\n        cy: 48,\n        fill: 'none',\n        viewBox: '24 24 48 48',\n        transform: 'translate(0,0)',\n        style: {}\n      };\n    }\n  },\n  'crescent': {\n    dur: 750,\n    circles: 1,\n    fn: () => {\n      return {\n        r: 26,\n        style: {}\n      };\n    }\n  },\n  'dots': {\n    dur: 750,\n    circles: 3,\n    fn: (_, index) => {\n      const animationDelay = -(110 * index) + 'ms';\n      return {\n        r: 6,\n        style: {\n          'left': `${9 - (9 * index)}px`,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 17,\n        y2: 29,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  },\n  'lines-small': {\n    dur: 1000,\n    lines: 12,\n    fn: (dur, index, total) => {\n      const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n      const animationDelay = `${(dur * index / total) - dur}ms`;\n      return {\n        y1: 12,\n        y2: 20,\n        style: {\n          'transform': transform,\n          'animation-delay': animationDelay,\n        }\n      };\n    }\n  }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\nimport { Observable } from 'rxjs';\r\nimport { ResultReponse, DataResponse } from '../interfaces/response';\r\nimport { Campaign, ClientCampaignDetail, CampaignClient, CampaignClientHistory } from '../interfaces/campaign';\r\nimport { map } from 'rxjs/operators';\r\nimport { MasterClient } from '../classes/client';\r\n\r\n@Injectable( {\r\n  providedIn: 'root'\r\n} )\r\nexport class CampaignService {\r\n\r\n  constructor(\r\n    private http: HttpService\r\n  ) { }\r\n\r\n  /**\r\n   * @description Lista todas las campañas\r\n   * @returns Listado de campañas\r\n   */\r\n  list( sellerId: number, filter: any, page = 1 ): Observable<DataResponse<Campaign[]>> {\r\n    const filtro = JSON.stringify( filter );\r\n    return this.http.get( `campaigns?sellers=${sellerId}&filter=${filtro}&page=${page}` );\r\n  }\r\n\r\n  detail( id: number, filter: any, page = 1 ): Observable<DataResponse<any[]>> {\r\n    return this.http.get( `campaign-clients?filter${filter}&&page=${page}&include=cliente,status` )\r\n  }\r\n\r\n  getById( id: number ): Observable<ResultReponse<Campaign>> {\r\n    return this.http.get( `campaign / ${id} ` );\r\n  }\r\n\r\n  getCampaignClientById( id: number ): Observable<DataResponse<any>> {\r\n    return this.http.get( `campaign-clients/${id}?include=cliente` );\r\n  }\r\n\r\n  getCampaign( filter: any, page: number ): Observable<DataResponse<MasterClient[]>> {\r\n    const filtro = JSON.stringify( filter );\r\n    return this.http.get( `campaign-clients?filter=${filtro}&page=${page}&include=cliente,status` );\r\n  }\r\n\r\n  updateCampaignClientInterest( id: number, interested: number ): Observable<any> {\r\n    return this.http.put( `campaign-clients/${id}`, { interested } );\r\n  }\r\n\r\n\r\n  /**\r\n   * @description Muestra el historial del ciente de la campaña\r\n   * @param campaign_client_id \r\n   * @param page \r\n   * @returns \r\n   */\r\n  campaignClientHistory( campaign_client_id: number, page = 1 ): Observable<DataResponse<CampaignClientHistory[]>> {\r\n    const filter = { campaign_client_id, order: { field: 'created_at', way: 'DESC' } };\r\n    const filtro = JSON.stringify( filter );\r\n\r\n    return this.http.get( `campaign-clients-histories?filter=${filtro}&page=${page}&include=user` );\r\n  }\r\n\r\n  callNow( campaignId: number ): Observable<any> {\r\n    const filter = { campaignId, order: { field: 'created_at', way: 'ASC' } };\r\n    const filtro = JSON.stringify( filter );\r\n    return this.http.get( `campaign-clients-call-now?filter=${filtro}&page=1&include=cliente,status` );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable( {\r\n  providedIn: 'root'\r\n} )\r\nexport class HttpService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  post( serviceName: string, data?: any ): Observable<any> {\r\n    const url = environment.api + serviceName;\r\n    this.http.post( url, data );\r\n    return this.http.post( url, data );\r\n  }\r\n\r\n  get( serviceName: string, data?: any ): Observable<any> {\r\n    const url = environment.api + serviceName;\r\n    return this.http.get( url, { params: data } );\r\n  }\r\n\r\n  put( serviceName: string, data?: any ): Observable<any> {\r\n    const url = environment.api + serviceName;\r\n    return this.http.put( url, data );\r\n  }\r\n\r\n  patch( serviceName: string, data?: any ): Observable<any> {\r\n    const url = environment.api + serviceName;\r\n    return this.http.patch( url, data );\r\n  }\r\n\r\n  delete( serviceName: string, data?: any ): Observable<any> {\r\n    const url = environment.api + serviceName;\r\n    return this.http.delete( url, data );\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}